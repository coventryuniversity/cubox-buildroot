diff --git a/xbmc/threads/Atomics.cpp b/xbmc/threads/Atomics.cpp
index 5b09f18..0a98a7e 100644
--- a/xbmc/threads/Atomics.cpp
+++ b/xbmc/threads/Atomics.cpp
@@ -194,14 +194,12 @@ long AtomicIncrement(volatile long* pAddr)
 {
   register long val;
   asm volatile (
-                "dmb      ish            \n" // Memory barrier. Make sure all memory accesses appearing before this complete before any that appear after
                 "1:                     \n" 
                 "ldrex   %0, [%1]       \n" // (val = *pAddr)
                 "add     %0,  #1        \n" // (val += 1)
                 "strex   r1,  %0, [%1]	\n"
                 "cmp     r1,   #0       \n"
                 "bne     1b             \n"
-                "dmb     ish            \n" // Memory barrier.
                 : "=&r" (val)
                 : "r"(pAddr)
                 : "r1"
@@ -273,14 +271,12 @@ long AtomicAdd(volatile long* pAddr, long amount)
 {
   register long val;
   asm volatile (
-                "dmb      ish            \n" // Memory barrier. Make sure all memory accesses appearing before this complete before any that appear after
                 "1:                     \n" 
                 "ldrex   %0, [%1]       \n" // (val = *pAddr)
                 "add     %0,  %2        \n" // (val += amount)
                 "strex   r1,  %0, [%1]	\n"
                 "cmp     r1,   #0       \n"
                 "bne     1b             \n"
-                "dmb     ish            \n" // Memory barrier.
                 : "=&r" (val)
                 : "r"(pAddr), "r"(amount)
                 : "r1"
@@ -351,14 +347,12 @@ long AtomicDecrement(volatile long* pAddr)
 {
   register long val;
   asm volatile (
-                "dmb      ish            \n" // Memory barrier. Make sure all memory accesses appearing before this complete before any that appear after
                 "1:                     \n" 
                 "ldrex   %0, [%1]       \n" // (val = *pAddr)
                 "sub     %0,  #1        \n" // (val -= 1)
                 "strex   r1,  %0, [%1]	\n"
                 "cmp     r1,   #0       \n"
                 "bne     1b             \n"
-                "dmb     ish            \n" // Memory barrier.
                 : "=&r" (val)
                 : "r"(pAddr)
                 : "r1"
@@ -431,14 +425,12 @@ long AtomicSubtract(volatile long* pAddr, long amount)
 {
   register long val;
   asm volatile (
-                "dmb     ish            \n" // Memory barrier. Make sure all memory accesses appearing before this complete before any that appear after
                 "1:                     \n" 
                 "ldrex   %0, [%1]       \n" // (val = *pAddr)
                 "sub     %0,  %2        \n" // (val -= amount)
                 "strex   r1,  %0, [%1]	\n"
                 "cmp     r1,   #0       \n"
                 "bne     1b             \n"
-                "dmb     ish            \n" // Memory barrier.
                 : "=&r" (val)
                 : "r"(pAddr), "r"(amount)
                 : "r1"
-- 
1.7.5.4

